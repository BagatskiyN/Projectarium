@model Projectarium.Domain.Entities.UserProfile

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="UserProfileTitleContainer"><h1 class="UserProfileTitle">Редактирование аккаунта</h1></div>
@Html.AntiForgeryToken()
<div class="MainUserInformation">
    <div class="UserProfilePhotoContainer">
        <div class="UserProfilePhoto">
            @if (Model.ImageData == null || Model.ImageMimeType == null)
            {
                <img id="image" class="img-thumbnail" src="" />
            }
            else
            {
                <img id="image" class="img-thumbnail" src="@Url.Action("GetUserProfileImage", "UserProfile",
                new { Model.Id})" />
            }


        </div>
        <div class="ChooseFileConatiner">
            <input name="FormFile" id="imgInput" type="file" class="form-control " />
        </div>

    </div>
    <div class="AboutUserInformation">
        <div class="AboutUserTitle ">Имя</div>
        <input type="text" class="AboutUserText" id="UserName" value="@Model.Name">
        <div class="AboutUserTitle ">О себе:</div>
        <textarea class="AboutUserTextArea" id="AboutUser">@Model.AboutUser</textarea>
        <div class="form-group SaveButtonContainer">
            <input type="submit" value="Сохранить" onclick="SaveUserData()" class="btn btn-primary" />
        </div>
    </div>
</div>
<div class="SecondaryInfoContainer">
    <div class="SecondaryInfoBlock">
        <div class="VacancyTitleContainer VacancyMainTitleContainer">

            <div class="BlockTitle VacancyTitle">Умения:</div>
        </div>
        <div class="VacancyTitleContainer  VacancyMainTitleContainer">
            <input type="text" id="SkillText" class="NewLinkInput" /><div class="AddItemButton" onclick="AddSkillUserProfile()">Добавить</div>
        </div>



        @if (Model.Skills != null)
        {
            if (Model.Skills.Count != 0)
            {<div id="Skills" class="SecondaryInfoList">
                    @foreach (var item in Model.Skills)
                    {
                        <div class="SkillRequestStyle">@await Html.PartialAsync("~/Views/Shared/ProjectManagerPartialViews/EditPartialViews/EditSkillView.cshtml", item)</div>
                    }


                </div>


            }
            else
            {
                <div id="Skills" class="SecondaryInfoList">
                    <p class="NoElementsText SecondaryInfoList" id="NoSkill">Умения не добавлены</p>
                </div>

            }
        }
        else
        {
            <div id="Skills" class="SecondaryInfoList">
                <p class="ProjectTitleBlock VacancyTitleContainer SecondaryInfoList" id="NoSkill">Умения не добавлены</p>
            </div>
        }
    </div>
    <div class="SecondaryInfoBlock">
        <div class="VacancyTitleContainer VacancyMainTitleContainer">

            <div class="BlockTitle VacancyTitle">Ссылки:</div>
        </div>
        <div class="VacancyTitleContainer  VacancyMainTitleContainer">
            <input type="text" id="LinkText" class="NewLinkInput" /><div class="AddItemButton" onclick="AddUserLink()">Добавить</div>
        </div>


        @if (Model.Links != null)
        {
            if (Model.Links.Count != 0)
            {<div id="Links" class=" SecondaryInfoList">

                    @foreach (var link in Model.Links)
                    {
                        @await Html.PartialAsync("~/Views/Shared/ProjectManagerPartialViews/EditPartialViews/EditLinkView.cshtml", link);
                    }
                </div>
            }
            else
            {
    <div id="Links" class="SecondaryInfoList">
        <p class="NoElementsText SecondaryInfoList" id="NoLink">Ссылок нет</p>
    </div>
              

            }

        }
        else
        {<div id="Links" class="SecondaryInfoList">
    <p class="ProjectTitleBlock VacancyTitleContainer SecondaryInfoList" id="NoLink">Ссылок нет</p>
</div>
 
        }
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script type="text/javascript">
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image').attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imgInput").change(function () {
            readURL(this);
        });
    </script>
}
